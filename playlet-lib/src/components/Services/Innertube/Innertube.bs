import "pkg:/components/JobSystem/Jobs.bs"
import "pkg:/components/JobSystem/JobSystem.bs"
import "pkg:/components/Services/Innertube/Constants.bs"
import "pkg:/source/utils/StringUtils.bs"

function Init()
end function

function OnNodeReady()
    OnRequestVisitorData()
end function

function OnRequestVisitorData() as void
    if m.innertubeSessionDataJob <> invalid
        return
    end if

    visitorData = m.top.visitorData
    if not StringUtils.IsNullOrEmpty(visitorData)
        return
    end if

    input = {
        innertube: m.top
    }

    callback = JobSystem.CreateCallback(OnInnertubeSessionDataJobDone)
    JobSystem.QueueJob(m.top.jobQueue, Jobs.InnertubeSessionDataJob, input, callback)
    m.innertubeSessionDataJob = callback
end function

function OnInnertubeSessionDataJobDone(event as object) as void
    JobSystem.UnobserveCallback(event.getRoSGNode())
    m.innertubeSessionDataJob = invalid
end function
