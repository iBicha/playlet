import "pkg:/components/Services/Innertube/Context.bs"
import "pkg:/source/utils/Types.bs"

namespace Innertube

    function CreateSubscribeRequest(channelIds as dynamic, options = invalid as object) as object
        deviceInfo = CreateObject("roDeviceInfo")

        payload = {
            "context": Innertube.CreateContext(Innertube.ClientType.Tv, deviceInfo, options)
        }

        if IsString(channelIds)
            channelIds = [channelIds]
        end if
        payload["channelIds"] = channelIds

        request = HttpClient.PostJson("https://www.youtube.com/youtubei/v1/subscription/subscribe?prettyPrint=false&alt=json", payload)
        request.Headers(Innertube.CreateHeaders(Innertube.ClientType.Tv))

        return request
    end function

    function CreateUnsubscribeRequest(channelIds as dynamic, options = invalid as object) as object
        deviceInfo = CreateObject("roDeviceInfo")

        payload = {
            "context": Innertube.CreateContext(Innertube.ClientType.Tv, deviceInfo, options)
        }

        if IsString(channelIds)
            channelIds = [channelIds]
        end if
        payload["channelIds"] = channelIds

        request = HttpClient.PostJson("https://www.youtube.com/youtubei/v1/subscription/unsubscribe?prettyPrint=false&alt=json", payload)
        request.Headers(Innertube.CreateHeaders(Innertube.ClientType.Tv))

        return request
    end function

end namespace
