import "pkg:/components/Services/Invidious/InvidiousService.bs"

@job("SubscribeJob")
function ExecuteJob() as void
    input = JobGetInput()

    channelView = input.channelView
    invidiousNode = input.invidious
    ucid = input.ucid
    subscribe = input.subscribe

    if JobIsCancelled()
        JobCancel()
        return
    end if

    cancellation = CancellationUtils.CreateCancellation(JobGetCallbackNode(), "cancel", true)
    service = new Invidious.InvidiousService(invidiousNode)

    if subscribe
        response = service.Subscribe(ucid, cancellation)
    else
        response = service.Unsubscribe(ucid, cancellation)
    end if

    if not response.IsSuccess()
        JobError("Failed to subscribe/unsubscribe to channel: " + response.ErrorMessage())
        return
    end if

    channelView.isSubscribed = subscribe
end function
