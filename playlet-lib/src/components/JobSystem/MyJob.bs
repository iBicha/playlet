import "pkg:/source/services/HttpClient.bs"
import "pkg:/source/utils/Logging.bs"

' Questions:
' 1. How to handle cancellations?
' 2. How to listen for output async?
' @job will run sync
' @asyncjob will run async - it will observeField and fire output
' @asyncjob(true) will run async and will require a "tick" to continue execution
function ExecuteJob() as void
    input = GetInput()
    callback = GetCallbackNode()
    LogInfo("Input:", input)

    request = HttpClient.Get("http://192.168.18.5:8095/api/v1/popular")
    request.Cancellation(CancellationUtils.CreateCancellation(callback, "cancel", true))
    response = request.Await()

    if response.IsSuccess()
        LogInfo("Request successful:", response.Json().Count(), "items received")
    else
        LogError("Request failed:", response.GetErrorMessage())
        JobError("Failed to fetch data from API: " + response.GetErrorMessage())
    end if
end function
